name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    runs-on: macos-15
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4'
      - name: Build (Release)
        run: |
          set -euo pipefail
          # Run unit tests before releasing (gate the release on tests passing)
          xcodebuild \
            -project weaver.xcodeproj \
            -scheme weaver \
            -destination 'platform=macOS,arch=arm64' \
            -sdk macosx \
            -destination-timeout 10 \
            CODE_SIGNING_ALLOWED=NO \
            -skipPackagePluginValidation -skipMacroValidation \
            -only-testing:weaverTests \
            test | tee test.log | cat
          xcodebuild -project weaver.xcodeproj -scheme weaver -configuration Release -destination 'platform=macOS,arch=arm64' \
            CODE_SIGNING_ALLOWED=NO -archivePath build/weaver.xcarchive archive | tee build2.log | cat
          mkdir -p artifacts
          # Zip artifact (optional alongside DMG)
          ditto -c -k --keepParent build/weaver.xcarchive/Products/Applications/weaver.app artifacts/weaver.zip || true
          # Create DMG with Applications symlink
          rm -rf dist && mkdir -p dist/Weaver
          cp -R "build/weaver.xcarchive/Products/Applications/weaver.app" dist/Weaver/
          ln -s /Applications dist/Weaver/Applications || true
          hdiutil create -volname "Weaver" -srcfolder dist/Weaver -ov -format UDZO "artifacts/weaver-${{ github.ref_name }}.dmg"
      - name: Download Sparkle sign_update tool
        env:
          SPARKLE_VERSION: '2.7.1'
        run: |
          set -euo pipefail
          : "${SPARKLE_VERSION:=2.7.1}"
          echo "SPARKLE_VERSION is: $SPARKLE_VERSION"
          URL_TAR="https://github.com/sparkle-project/Sparkle/releases/download/${SPARKLE_VERSION}/Sparkle-${SPARKLE_VERSION}.tar.xz"
          echo "Downloading $URL_TAR"
          curl --fail --retry 3 --retry-delay 2 -L "$URL_TAR" -o Sparkle.tar.xz
          if [ ! -s Sparkle.tar.xz ]; then
            echo "Sparkle.tar.xz is missing or empty" >&2
            exit 1
          fi
          tar -xJf Sparkle.tar.xz || { echo "Failed to extract Sparkle.tar.xz" >&2; exit 1; }
          echo "Extracted roots:" && ls -1d Sparkle-* || true
          echo "$PWD/Sparkle-${SPARKLE_VERSION}/bin" >> "$GITHUB_PATH"
      - name: Sparkle sign DMG and generate appcast
        env:
          SPARKLE_PRIVATE_KEY: ${{ secrets.SPARKLE_PRIVATE_KEY }}
        run: |
          set -euo pipefail
          # Sign the DMG
          SIGN_TOOL="$(find . -maxdepth 4 -type f -name sign_update -perm -111 | head -n1 || true)"
          if [ -z "$SIGN_TOOL" ]; then SIGN_TOOL="$(command -v sign_update || true)"; fi
          if [ -z "$SIGN_TOOL" ]; then echo "sign_update not found" >&2; find . -maxdepth 4 -name sign_update || true; exit 1; fi
          echo "Using sign_update at: $SIGN_TOOL"
          if [ ! -f "artifacts/weaver-${{ github.ref_name }}.dmg" ]; then echo "DMG not found" >&2; ls -la artifacts || true; exit 1; fi
          # Write private key to a file for secure usage
          KEY_FILE="sparkle_private_key.pem"
          printf "%s" "$SPARKLE_PRIVATE_KEY" > "$KEY_FILE"
          chmod 600 "$KEY_FILE"
          # Generate signature using key file (avoids deprecated -s)
          DMG="artifacts/weaver-${{ github.ref_name }}.dmg"
          SIG="$($SIGN_TOOL --ed-key-file "$KEY_FILE" "$DMG")"
          if [ -z "$SIG" ]; then echo "sign_update produced empty signature" >&2; exit 1; fi
          echo "Signature: $SIG"
          # Generate minimal appcast
          VERSION=${GITHUB_REF_NAME#v}
          LENGTH=$(stat -f%z "$DMG" 2>/dev/null || wc -c < "$DMG")
          cat > artifacts/appcast.xml <<EOF
          <?xml version="1.0" encoding="utf-8"?>
          <rss version="2.0" xmlns:sparkle="http://www.andymatuschak.org/xml-namespaces/sparkle" xmlns:atom="http://www.w3.org/2005/Atom">
            <channel>
              <title>Weaver Updates</title>
              <link>https://github.com/jack-chaudier/weaver/releases/latest</link>
              <item>
                <title>Version ${VERSION}</title>
                <enclosure url="https://github.com/jack-chaudier/weaver/releases/download/${{ github.ref_name }}/weaver-${{ github.ref_name }}.dmg" sparkle:edSignature="${SIG}" sparkle:version="${VERSION}" sparkle:shortVersionString="${VERSION}" length="${LENGTH}">
                </enclosure>
              </item>
            </channel>
          </rss>
          EOF
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/weaver.zip
            artifacts/weaver-${{ github.ref_name }}.dmg
            artifacts/appcast.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

