name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    runs-on: macos-15
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4'
      - name: Build (Release)
        run: |
          set -euo pipefail
          # Run tests before releasing (gate the release on tests passing)
          xcodebuild -project weaver.xcodeproj -scheme weaver -destination 'platform=macOS' \
            CODE_SIGNING_ALLOWED=NO -skipPackagePluginValidation -skipMacroValidation \
            -skip-testing:weaverUITests -skip-testing:weaverUITestsLaunchTests \
            -only-testing:weaverTests test | tee test.log | cat
          xcodebuild -project weaver.xcodeproj -scheme weaver -configuration Release -destination 'platform=macOS' \
            CODE_SIGNING_ALLOWED=NO -archivePath build/weaver.xcarchive archive | tee build.log | cat
          mkdir -p artifacts
          # Zip artifact (optional alongside DMG)
          ditto -c -k --keepParent build/weaver.xcarchive/Products/Applications/weaver.app artifacts/weaver.zip || true
          # Create DMG with Applications symlink
          rm -rf dist && mkdir -p dist/Weaver
          cp -R "build/weaver.xcarchive/Products/Applications/weaver.app" dist/Weaver/
          ln -s /Applications dist/Weaver/Applications || true
          hdiutil create -volname "Weaver" -srcfolder dist/Weaver -ov -format UDZO "artifacts/weaver-${{ github.ref_name }}.dmg"
      - name: Download Sparkle sign_update tool
        env:
          SPARKLE_VERSION: '2.7.1'
        run: |
          set -euo pipefail
          URL="https://github.com/sparkle-project/Sparkle/releases/download/${SPARKLE_VERSION}/Sparkle-${SPARKLE_VERSION}.zip"
          echo "Downloading $URL"
          curl --fail --retry 3 --retry-delay 2 -L "$URL" -o Sparkle.zip
          if [ ! -s Sparkle.zip ]; then
            echo "Sparkle.zip is missing or empty" >&2
            exit 1
          fi
          unzip -q Sparkle.zip || { echo "Failed to unzip Sparkle.zip" >&2; exit 1; }
          echo "$PWD/Sparkle-${SPARKLE_VERSION}/bin" >> "$GITHUB_PATH"
      - name: Sparkle sign DMG and generate appcast
        env:
          SPARKLE_PRIVATE_KEY: ${{ secrets.SPARKLE_PRIVATE_KEY }}
        run: |
          set -euo pipefail
          # Sign the DMG
          sign_update --ed-key "$SPARKLE_PRIVATE_KEY" artifacts/weaver-${{ github.ref_name }}.dmg
          # Generate minimal appcast
          VERSION=${GITHUB_REF_NAME#v}
          cat > artifacts/appcast.xml <<EOF
          <?xml version="1.0" encoding="utf-8"?>
          <rss version="2.0" xmlns:sparkle="http://www.andymatuschak.org/xml-namespaces/sparkle" xmlns:atom="http://www.w3.org/2005/Atom">
            <channel>
              <title>Weaver Updates</title>
              <link>https://github.com/jack-chaudier/weaver/releases/latest</link>
              <item>
                <title>Version ${VERSION}</title>
                <enclosure url="https://github.com/jack-chaudier/weaver/releases/download/${{ github.ref_name }}/weaver-${{ github.ref_name }}.dmg" sparkle:edSignature="$(cat artifacts/weaver-${{ github.ref_name }}.dmg.ed25519)">
                </enclosure>
              </item>
            </channel>
          </rss>
          EOF
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/weaver.zip
            artifacts/weaver-${{ github.ref_name }}.dmg
            artifacts/appcast.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

